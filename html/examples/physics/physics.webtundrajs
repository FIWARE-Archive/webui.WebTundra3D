define([
    "lib/three",
    "core/framework/Tundra",
    "core/script/IApplication"
], function(THREE, Tundra, IApplication) {

var PhysicsExample = IApplication.$extend(
{
    __init__ : function()
    {
        this.$super("Physics2");

        if (!Tundra.client.isConnected())
            Tundra.client.onConnected(this, this.start);
        else
            this.start();
    },

    onScriptDestroyed : function()
    {
        this.log.info("Shutting down");

        // Clean up any UI created by this application.
        if (this.ui && this.ui.welcome)
            this.ui.welcome.remove();
        this.ui = null;
    },

    start : function()
    {
        var camera = Tundra.renderer.activeCameraEntity();
        camera.placeable.setPosition(0, 7.17, 25.65);

        this.ui = {};
        this.ui.baseCSS = {
            "position" : "absolute",
            "padding"  : 25,
            "top" : 25,
            "left" : 25,
            "font-family" : "RobotoDraft, Arial",
            "color" : "white",
            "background-color" : "rgba(8,149,195,0.8)"
        };

        this.ui.welcome = $("<div/>", { text : "Welcome to the physics example" });
        this.ui.welcome.css(this.ui.baseCSS);
        this.ui.welcome.hide();

        Tundra.ui.add(this.ui.welcome);
        this.ui.welcome.fadeIn(5000);

        this.light = Tundra.scene.entityByName("MainLight");
        transform = this.light.placeable.transform;
        this.yDistance = Math.sqrt(transform.pos.x * transform.pos.x + transform.pos.z * transform.pos.z);
        this.yRotation = 0.0;
        Tundra.input.onMousePress(this, this.onMousePress);
        Tundra.frame.onUpdate(this, this.rotateLight);
    },

    onMousePress : function()
    {
        var raycast = Tundra.renderer.raycast();
        if (raycast.entity && raycast.entity.name === "Boulder")
            raycast.entity.rigidbody.mass = 100.0;
    },

    rotateLight : function()
    {
        var trans = this.light.placeable.transform;
        trans.pos.x = this.yDistance * Math.sin(this.yRotation / 360.0 * 2 * 3.1415);
        trans.pos.z = this.yDistance * Math.cos(this.yRotation / 360.0 * 2 * 3.1415);
        this.light.placeable.transform = trans;

        this.yRotation += 2.0;
        if (this.yRotation > 360.0) this.yRotation -= 360.0;
    }
});

return PhysicsExample;

});